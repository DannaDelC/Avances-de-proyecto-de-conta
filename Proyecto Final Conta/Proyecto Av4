import tkinter as tk
from tkinter import ttk
import matplotlib.pyplot as plt
import numpy as np

class BreakEvenApp:
    def __init__(self, root):
        self.root = root
        self.root.title("Cálculo del Punto de Equilibrio")

        # Crear pestañas
        self.tab_control = ttk.Notebook(self.root)

        self.tab_calculo = ttk.Frame(self.tab_control)
        self.tab_grafica = ttk.Frame(self.tab_control)

        self.tab_control.add(self.tab_calculo, text='Cálculo')
        self.tab_control.add(self.tab_grafica, text='Gráfica')

        self.tab_control.pack(expand=1, fill='both')

        self.create_calculo_tab()
        self.create_grafica_tab()

    def create_calculo_tab(self):
        # Entradas de usuario
        ttk.Label(self.tab_calculo, text="Costos Fijos (Quetzales):").grid(column=0, row=0)
        self.fixed_costs = tk.DoubleVar()
        ttk.Entry(self.tab_calculo, textvariable=self.fixed_costs).grid(column=1, row=0)

        ttk.Label(self.tab_calculo, text="Precio de Venta (Quetzales):").grid(column=0, row=1)
        self.sale_price = tk.DoubleVar()
        ttk.Entry(self.tab_calculo, textvariable=self.sale_price).grid(column=1, row=1)

        ttk.Label(self.tab_calculo, text="Costo Variable por Unidad (Quetzales):").grid(column=0, row=2)
        self.variable_cost = tk.DoubleVar()
        ttk.Entry(self.tab_calculo, textvariable=self.variable_cost).grid(column=1, row=2)

        # Botón para calcular
        ttk.Button(self.tab_calculo, text="Calcular Punto de Equilibrio", command=self.calculate_breakeven).grid(column=0, row=3, columnspan=2)

        # Resultados
        self.result_label = ttk.Label(self.tab_calculo, text="")
        self.result_label.grid(column=0, row=4, columnspan=2)

    def create_grafica_tab(self):
        ttk.Button(self.tab_grafica, text="Mostrar Gráfica", command=self.plot_breakeven).pack(pady=20)

    def calculate_breakeven(self):
        fixed_costs = self.fixed_costs.get()
        sale_price = self.sale_price.get()
        variable_cost = self.variable_cost.get()

        if sale_price <= variable_cost:
            self.result_label.config(text="Error: El precio de venta debe ser mayor que el costo variable.")
            return

        # Cálculo del punto de equilibrio en unidades y quetzales
        breakeven_units = fixed_costs / (sale_price - variable_cost)
        breakeven_quetzales = breakeven_units * sale_price

        self.result_label.config(text=f"Punto de Equilibrio: {breakeven_units:.2f} unidades\n"
                                       f"Equivalente en Quetzales: Q {breakeven_quetzales:.2f}")

    def plot_breakeven(self):
        fixed_costs = self.fixed_costs.get()
        sale_price = self.sale_price.get()
        variable_cost = self.variable_cost.get()

        breakeven_units = fixed_costs / (sale_price - variable_cost)

        # Valores para la gráfica
        units = np.arange(0, breakeven_units * 2, 1)
        revenue = sale_price * units
        total_costs = fixed_costs + variable_cost * units

        plt.figure(figsize=(10, 6))
        plt.plot(units, revenue, label='Ingresos Totales', color='green')
        plt.plot(units, total_costs, label='Costos Totales', color='red')
        plt.axvline(x=breakeven_units, color='blue', linestyle='--', label='Punto de Equilibrio')
        plt.title('Gráfica del Punto de Equilibrio')
        plt.xlabel('Unidades')
        plt.ylabel('Quetzales')
        plt.legend()
        plt.grid()
        plt.show()

if __name__ == "__main__":
    root = tk.Tk()
    app = BreakEvenApp(root)
    root.mainloop()
